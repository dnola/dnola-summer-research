<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.advancedqueue.AdvancedQueueSorterJobProperty plugin="PrioritySorter@2.8">
      <useJobPriority>false</useJobPriority>
      <priority>-1</priority>
    </jenkins.advancedqueue.AdvancedQueueSorterJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Build_Number_Regular</name>
          <description></description>
          <defaultValue>lastSuccessfulBuild</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Build_Number_Early</name>
          <description></description>
          <defaultValue>lastSuccessfulBuild</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.21">
      <autoRebuild>false</autoRebuild>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.heavy__job.HeavyJobProperty plugin="heavy-job@1.1">
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.2.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/dnola/dnola-summer-research.git</url>
        <credentialsId>1dd9e6d7-e64c-4329-9e48-e879c84d5c0d</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>**</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
    </extensions>
  </scm>
  <assignedNode>any</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.30">
      <project>Build_Single_Classifier_Submission</project>
      <filter>*.csv</filter>
      <target>First/</target>
      <selector class="hudson.plugins.copyartifact.SpecificBuildSelector">
        <buildNumber>${Build_Number_Regular}</buildNumber>
      </selector>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.30">
      <project>Build_Single_Classifier_Submission</project>
      <filter>*.csv</filter>
      <target>Second/</target>
      <selector class="hudson.plugins.copyartifact.SpecificBuildSelector">
        <buildNumber>${Build_Number_Early}</buildNumber>
      </selector>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.python.Python plugin="python@1.2">
      <command>print &quot;hello&quot;
first = None
second = None
with open(&apos;First/DistributedSubmitSingle.csv&apos;, &apos;r&apos;) as f:
    first = f.readlines()
with open(&apos;Second/DistributedSubmitSingle.csv&apos;, &apos;r&apos;) as f:
    second = f.readlines()

first = [f[:f.rfind(&apos;,&apos;)+1] for f in first]
second = [f[f.rfind(&apos;,&apos;)+1:] for f in second]

print second[:10]
s = iter(second)
final = [f+s.next() for f in first]

print final [:10]

out =  &quot;&quot;
for f in final:
    out+=f

with open(&apos;DistributedSubmitDual.csv&apos;, &apos;w&apos;) as f:
    f.write(out)</command>
    </hudson.plugins.python.Python>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*/*.csv, *.csv</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers/>
</project>